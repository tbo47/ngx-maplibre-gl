{
  "version": 3,
  "sources": ["projects/showcase/src/app/demo/examples/3d-buildings.component.ts"],
  "sourcesContent": ["import { Component } from '@angular/core';\nimport { Map, SymbolLayerSpecification } from 'maplibre-gl';\nimport { MapComponent, LayerComponent } from '@maplibre/ngx-maplibre-gl';\n\n@Component({\n  selector: 'showcase-demo',\n  template: `\n    <mgl-map\n      [style]=\"\n        'https://api.maptiler.com/maps/streets/style.json?key=get_your_own_OpIi9ZULNHzrESv6T2vL'\n      \"\n      [zoom]=\"15.5\"\n      [center]=\"[-74.0066, 40.7135]\"\n      [pitch]=\"45\"\n      [bearing]=\"-17.6\"\n      (mapLoad)=\"onLoad($event)\"\n      [preserveDrawingBuffer]=\"true\"\n    >\n      <mgl-layer\n        id=\"3d-buildings\"\n        source=\"openmaptiles\"\n        sourceLayer=\"building\"\n        [filter]=\"['==', 'extrude', 'true']\"\n        type=\"fill-extrusion\"\n        [minzoom]=\"15\"\n        [paint]=\"{\n          'fill-extrusion-color': '#aaa',\n          'fill-extrusion-height': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            15,\n            0,\n            15.05,\n            ['get', 'height']\n          ],\n          'fill-extrusion-base': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            15,\n            0,\n            15.05,\n            ['get', 'min_height']\n          ],\n          'fill-extrusion-opacity': 0.6\n        }\"\n        [before]=\"labelLayerId\"\n      ></mgl-layer>\n    </mgl-map>\n  `,\n  styleUrls: ['./examples.css'],\n  standalone: true,\n  imports: [MapComponent, LayerComponent],\n})\nexport class Display3dBuildingsComponent {\n  labelLayerId: string;\n\n  onLoad(mapInstance: Map) {\n    const layers = mapInstance.getStyle().layers!;\n\n    for (let i = 0; i < layers.length; i++) {\n      if (\n        layers[i].type === 'symbol' &&\n        (<SymbolLayerSpecification>layers[i]).layout!['text-field']\n      ) {\n        this.labelLayerId = layers[i].id;\n        break;\n      }\n    }\n  }\n}\n"],
  "mappings": "8fAuDaA,GAA2B,IAAA,CAAlC,IAAOA,EAAP,MAAOA,CAA2B,CAGtCC,OAAOC,EAAgB,CACrB,IAAMC,EAASD,EAAYE,SAAQ,EAAGD,OAEtC,QAASE,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IACjC,GACEF,EAAOE,CAAC,EAAEE,OAAS,UACQJ,EAAOE,CAAC,EAAGG,OAAQ,YAAY,EAC1D,CACA,KAAKC,aAAeN,EAAOE,CAAC,EAAEK,GAC9B,KACF,CAEJ,yCAfWV,EAA2B,sBAA3BA,EAA2BW,UAAA,CAAA,CAAA,eAAA,CAAA,EAAAC,WAAA,GAAAC,SAAA,CAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,UAAA,OAAA,SAAA,QAAA,UAAA,uBAAA,EAAA,CAAA,KAAA,eAAA,SAAA,eAAA,cAAA,WAAA,OAAA,iBAAA,EAAA,SAAA,UAAA,QAAA,QAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,IAhDpCE,EAAA,EAAA,UAAA,CAAA,EAQEC,EAAA,UAAA,SAAAC,EAAA,CAAA,OAAWH,EAAAnB,OAAAsB,CAAA,CAAc,CAAA,EAGzBC,EAAA,EAAA,YAAA,CAAA,EA+BFC,EAAA,SAzCEC,EAAA,wFAAA,EAGAC,EAAA,OAAA,IAAA,EAAa,SAAAC,EAAA,GAAAC,EAAA,QAAA,CAAA,EACiB,QAAA,EAAA,EAClB,UAAA,KAAA,EACK,wBAAA,EAAA,EAQfC,EAAA,EAAAH,EAAA,SAAAI,EAAA,GAAAC,CAAA,CAAA,EAAoC,UAAA,EAAA,EAEtB,QAAAC,EAAA,GAAAC,EAAAC,EAAA,GAAAC,EAAAL,EAAA,GAAAM,CAAA,EAAAN,EAAA,GAAAO,CAAA,EAAAP,EAAA,GAAAQ,CAAA,CAAA,EAAAJ,EAAA,GAAAC,EAAAL,EAAA,GAAAM,CAAA,EAAAN,EAAA,GAAAO,CAAA,EAAAP,EAAA,GAAAS,CAAA,CAAA,CAAA,CAAA,EAsBZ,SAAApB,EAAAX,YAAA,kBAOEgC,EAAcC,CAAc,EAAAC,OAAA,CAAA;kDAAA,CAAA,CAAA,EAElC,IAAO3C,EAAP4C,SAAO5C,CAA2B,GAAA",
  "names": ["Display3dBuildingsComponent", "onLoad", "mapInstance", "layers", "getStyle", "i", "length", "type", "layout", "labelLayerId", "id", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275styleMap", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c0", "\u0275\u0275advance", "\u0275\u0275pureFunction0", "_c1", "\u0275\u0275pureFunction2", "_c7", "\u0275\u0275pureFunction3", "_c5", "_c2", "_c3", "_c4", "_c6", "MapComponent", "LayerComponent", "styles", "_Display3dBuildingsComponent"]
}
