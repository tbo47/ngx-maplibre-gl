{
  "version": 3,
  "sources": ["projects/showcase/src/app/demo/examples/heatmap.component.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\nimport { CircleLayerSpecification, LayerSpecification } from 'maplibre-gl';\nimport {\n  MapComponent,\n  GeoJSONSourceComponent,\n  LayerComponent,\n} from '@maplibre/ngx-maplibre-gl';\nimport { NgIf, NgFor } from '@angular/common';\n\n@Component({\n  selector: 'showcase-demo',\n  template: `\n    <mgl-map\n      [style]=\"\n        'https://api.maptiler.com/maps/streets/style.json?key=get_your_own_OpIi9ZULNHzrESv6T2vL'\n      \"\n      [zoom]=\"[3]\"\n      [center]=\"[-103.59179687498357, 40.66995747013945]\"\n      [preserveDrawingBuffer]=\"true\"\n    >\n      <ng-container *ngIf=\"earthquakes\">\n        <mgl-geojson-source\n          id=\"earthquakes\"\n          [data]=\"earthquakes\"\n          [cluster]=\"true\"\n          [clusterMaxZoom]=\"15\"\n          [clusterRadius]=\"20\"\n        ></mgl-geojson-source>\n        <mgl-layer\n          *ngFor=\"let layer of clusterLayers\"\n          [id]=\"layer.id\"\n          [type]=\"layer.type\"\n          source=\"earthquakes\"\n          [filter]=\"layer.filter\"\n          [paint]=\"layer.paint\"\n        ></mgl-layer>\n        <mgl-layer\n          id=\"unclustered-point\"\n          type=\"circle\"\n          source=\"earthquakes\"\n          [filter]=\"['!=', 'cluster', true]\"\n          [paint]=\"{\n            'circle-color': 'rgba(0,255,0,0.5)',\n            'circle-radius': 20,\n            'circle-blur': 1\n          }\"\n        ></mgl-layer>\n      </ng-container>\n    </mgl-map>\n  `,\n  styleUrls: ['./examples.css'],\n  standalone: true,\n  imports: [MapComponent, NgIf, GeoJSONSourceComponent, NgFor, LayerComponent],\n})\nexport class HeatMapComponent implements OnInit {\n  earthquakes: object;\n  clusterLayers: LayerSpecification[];\n\n  async ngOnInit() {\n    this.earthquakes = await import('./earthquakes.geo.json');\n    const layersData: [number, string][] = [\n      [0, 'green'],\n      [20, 'orange'],\n      [200, 'red'],\n    ];\n    this.clusterLayers = layersData.map(\n      (data, index) =>\n        ({\n          type: 'circle',\n          id: `cluster-${index}`,\n          paint: {\n            /* eslint-disable @typescript-eslint/naming-convention */\n            'circle-color': data[1],\n            'circle-radius': 70,\n            'circle-blur': 1,\n            /* eslint-enable @typescript-eslint/naming-convention */\n          },\n          filter:\n            index === layersData.length - 1\n              ? ['>=', 'point_count', data[0]]\n              : [\n                  'all',\n                  ['>=', 'point_count', data[0]],\n                  ['<', 'point_count', layersData[index + 1][0]],\n                ],\n        } as CircleLayerSpecification)\n    );\n  }\n}\n"],
  "mappings": "0aA4BQA,EAAA,EAAA,YAAA,CAAA,yBAEEC,EAAA,KAAAC,EAAAC,EAAA,EAAe,OAAAD,EAAAE,IAAA,EACI,SAAAF,EAAAG,MAAA,EAEI,QAAAH,EAAAI,KAAA,4BAb3BC,EAAA,CAAA,EACEP,EAAA,EAAA,qBAAA,CAAA,EAOAQ,EAAA,EAAAC,EAAA,EAAA,EAAA,YAAA,CAAA,EAQAT,EAAA,EAAA,YAAA,CAAA,sBAbEU,EAAA,EAAAT,EAAA,OAAAU,EAAAC,WAAA,EAAoB,UAAA,EAAA,EACJ,iBAAA,EAAA,EACK,gBAAA,EAAA,EAIHF,EAAA,EAAAT,EAAA,UAAAU,EAAAE,aAAA,EAWlBH,EAAA,EAAAT,EAAA,SAAAa,EAAA,EAAAC,CAAA,CAAA,EAAkC,QAAAD,EAAA,EAAAE,CAAA,CAAA,GAc5C,IAAaC,GAAgB,IAAA,CAAvB,IAAOA,EAAP,MAAOA,CAAgB,CAIrBC,UAAQ,QAAAC,EAAA,sBACZ,KAAKP,YAAc,KAAM,QAAO,qBAAwB,EACxD,IAAMQ,EAAiC,CACrC,CAAC,EAAG,OAAO,EACX,CAAC,GAAI,QAAQ,EACb,CAAC,IAAK,KAAK,CAAC,EAEd,KAAKP,cAAgBO,EAAWC,IAC9B,CAACC,EAAMC,KACJ,CACCnB,KAAM,SACND,GAAI,WAAWoB,CAAK,GACpBjB,MAAO,CAEL,eAAgBgB,EAAK,CAAC,EACtB,gBAAiB,GACjB,cAAe,GAGjBjB,OACEkB,IAAUH,EAAWI,OAAS,EAC1B,CAAC,KAAM,cAAeF,EAAK,CAAC,CAAC,EAC7B,CACE,MACA,CAAC,KAAM,cAAeA,EAAK,CAAC,CAAC,EAC7B,CAAC,IAAK,cAAeF,EAAWG,EAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,GAE1B,CAEpC,2CAjCWN,EAAgB,sBAAhBA,EAAgBQ,UAAA,CAAA,CAAA,eAAA,CAAA,EAAAC,WAAA,GAAAC,SAAA,CAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,OAAA,SAAA,uBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,KAAA,cAAA,EAAA,OAAA,UAAA,iBAAA,eAAA,EAAA,CAAA,SAAA,cAAA,EAAA,KAAA,OAAA,SAAA,QAAA,EAAA,QAAA,SAAA,EAAA,CAAA,KAAA,oBAAA,OAAA,SAAA,SAAA,cAAA,EAAA,SAAA,OAAA,EAAA,CAAA,SAAA,cAAA,EAAA,KAAA,OAAA,SAAA,OAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,IA1CzBE,EAAA,EAAA,UAAA,CAAA,EAQE3B,EAAA,EAAA4B,EAAA,EAAA,EAAA,eAAA,CAAA,EA4BFC,EAAA,SAnCEC,EAAA,wFAAA,EAGArC,EAAA,OAAAa,EAAA,EAAAyB,CAAA,CAAA,EAAY,SAAAC,EAAA,EAAAC,EAAA,mBAAA,CAAA,EACuC,wBAAA,EAAA,EAGpC/B,EAAA,EAAAT,EAAA,OAAAiC,EAAAtB,WAAA,kBAgCT8B,EAAcC,EAAMC,EAAwBC,EAAOC,CAAc,EAAAC,OAAA,CAAA;kDAAA,CAAA,CAAA,EAEvE,IAAO9B,EAAP+B,SAAO/B,CAAgB,GAAA",
  "names": ["\u0275\u0275element", "\u0275\u0275property", "layer_r1", "id", "type", "filter", "paint", "\u0275\u0275elementContainerStart", "\u0275\u0275template", "HeatMapComponent_ng_container_1_mgl_layer_2_Template", "\u0275\u0275advance", "ctx_r1", "earthquakes", "clusterLayers", "\u0275\u0275pureFunction0", "_c2", "_c3", "HeatMapComponent", "ngOnInit", "__async", "layersData", "map", "data", "index", "length", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "HeatMapComponent_ng_container_1_Template", "\u0275\u0275elementEnd", "\u0275\u0275styleMap", "_c0", "\u0275\u0275pureFunction1", "_c1", "MapComponent", "NgIf", "GeoJSONSourceComponent", "NgFor", "LayerComponent", "styles", "_HeatMapComponent"]
}
